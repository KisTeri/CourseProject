// <auto-generated />
using System;
using AccountingOfStudents.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccountingOfStudents.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230411071853_Migration_2.0.1")]
    partial class Migration_201
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccountingOfStudents.Entities.AssignedCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK_AssignedCategories_Id");

                    b.ToTable("AssignedCategory");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.EducationalProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KindOfProgram")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("NameOfProgram")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id")
                        .HasName("PK_EducationalPrograms_Id");

                    b.ToTable("EducationalProgram");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.InformationAboutEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignedCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EducationalProgramId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndOfEducation")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KindOfDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("PersonalInformationOfStudentId")
                        .HasColumnType("int");

                    b.Property<string>("ProtocolNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SendingOrganizationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartOfEducation")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK_InformationAboutEducations_Id");

                    b.HasIndex("AssignedCategoryId");

                    b.HasIndex("EducationalProgramId");

                    b.HasIndex("KindOfDocumentId")
                        .IsUnique();

                    b.HasIndex("PersonalInformationOfStudentId")
                        .IsUnique();

                    b.HasIndex("SendingOrganizationId");

                    b.ToTable("InformationAboutEducation");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.KindOfDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("date");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InformationAboutEducationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_KindOfDocuments_Id");

                    b.ToTable("KindOfDocument");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.PersonalInformationOfStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Citizenship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompletedEducation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<int>("InformationAboutEducationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Snils")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id")
                        .HasName("PK_PersonalInformationOfStudents_Id");

                    b.ToTable("PersonalInformationOfStudent");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.SendingOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Organization")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id")
                        .HasName("PK_SendingOrganizations_Id");

                    b.ToTable("SendingOrganization");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.InformationAboutEducation", b =>
                {
                    b.HasOne("AccountingOfStudents.Entities.AssignedCategory", "AssignedCategory")
                        .WithMany("InformationAboutEducations")
                        .HasForeignKey("AssignedCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_InformationAboutEducations_AssignedCategoryId_AssignedCategories_Id");

                    b.HasOne("AccountingOfStudents.Entities.EducationalProgram", "EducationalProgram")
                        .WithMany("InformationAboutEducations")
                        .HasForeignKey("EducationalProgramId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_InformationAboutEducations_EducationalProgramId_EducationalProgram_Id");

                    b.HasOne("AccountingOfStudents.Entities.KindOfDocument", "KindOfDocument")
                        .WithOne("InformationAboutEducation")
                        .HasForeignKey("AccountingOfStudents.Entities.InformationAboutEducation", "KindOfDocumentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AccountingOfStudents.Entities.PersonalInformationOfStudent", "PersonalInformationOfStudent")
                        .WithOne("InformationAboutEducation")
                        .HasForeignKey("AccountingOfStudents.Entities.InformationAboutEducation", "PersonalInformationOfStudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_InformationAboutEducation_PersonalInformationOfStudentId_PersonalInformationOfStudent_Id");

                    b.HasOne("AccountingOfStudents.Entities.SendingOrganization", "SendingOrganization")
                        .WithMany("InformationAboutEducations")
                        .HasForeignKey("SendingOrganizationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_InformationAboutEducations_SendingOrganizationId_SendingOrganizations_Id");

                    b.Navigation("AssignedCategory");

                    b.Navigation("EducationalProgram");

                    b.Navigation("KindOfDocument");

                    b.Navigation("PersonalInformationOfStudent");

                    b.Navigation("SendingOrganization");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.AssignedCategory", b =>
                {
                    b.Navigation("InformationAboutEducations");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.EducationalProgram", b =>
                {
                    b.Navigation("InformationAboutEducations");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.KindOfDocument", b =>
                {
                    b.Navigation("InformationAboutEducation")
                        .IsRequired();
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.PersonalInformationOfStudent", b =>
                {
                    b.Navigation("InformationAboutEducation")
                        .IsRequired();
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.SendingOrganization", b =>
                {
                    b.Navigation("InformationAboutEducations");
                });
#pragma warning restore 612, 618
        }
    }
}
