// <auto-generated />
using System;
using AccountingOfStudents.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccountingOfStudents.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230325082911_Migration_1.0.0")]
    partial class Migration_100
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccountingOfStudents.Entities.EducationalProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KindOfProgram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfProgram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EducationalPrograms");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.InformationAboutEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignedCategories")
                        .HasColumnType("int");

                    b.Property<int>("ContractNumber")
                        .HasColumnType("int");

                    b.Property<int>("EducationalProgramsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndOfEducation")
                        .HasColumnType("datetime2");

                    b.Property<int>("KindOfDocumentsId")
                        .HasColumnType("int");

                    b.Property<int>("PersonalInformationOfStudentsId")
                        .HasColumnType("int");

                    b.Property<int>("ProtocolNumber")
                        .HasColumnType("int");

                    b.Property<int>("SendingOrganizationsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartOfEducation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EducationalProgramsId");

                    b.HasIndex("KindOfDocumentsId");

                    b.HasIndex("PersonalInformationOfStudentsId");

                    b.HasIndex("SendingOrganizationsId");

                    b.ToTable("InformationAboutEducations");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.KindOfDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Series")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("KindOfDocuments");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.PersonalInformationOfStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Citizenship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompletedEducation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("Snils")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PersonalInformationOfStudents");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.SendingOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Organization")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SendingOrganizations");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.InformationAboutEducation", b =>
                {
                    b.HasOne("AccountingOfStudents.Entities.EducationalProgram", "EducationalPrograms")
                        .WithMany("InformationAboutEducations")
                        .HasForeignKey("EducationalProgramsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountingOfStudents.Entities.KindOfDocument", "KindOfDocuments")
                        .WithMany()
                        .HasForeignKey("KindOfDocumentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountingOfStudents.Entities.PersonalInformationOfStudent", "PersonalInformationOfStudents")
                        .WithMany()
                        .HasForeignKey("PersonalInformationOfStudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountingOfStudents.Entities.SendingOrganization", "SendingOrganizations")
                        .WithMany()
                        .HasForeignKey("SendingOrganizationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationalPrograms");

                    b.Navigation("KindOfDocuments");

                    b.Navigation("PersonalInformationOfStudents");

                    b.Navigation("SendingOrganizations");
                });

            modelBuilder.Entity("AccountingOfStudents.Entities.EducationalProgram", b =>
                {
                    b.Navigation("InformationAboutEducations");
                });
#pragma warning restore 612, 618
        }
    }
}
